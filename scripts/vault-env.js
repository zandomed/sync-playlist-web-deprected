// #!/usr/bin/env node

// const vault = require('node-vault');
// const fs = require('fs');
// const path = require('path');

// const VAULT_CONFIG = {
//   endpoint: process.env.VAULT_ENDPOINT || 'http://localhost:8200',
//   token: process.env.VAULT_TOKEN,
//   authMethod: process.env.VAULT_AUTH_METHOD || 'token',
//   username: process.env.VAULT_USERNAME,
//   password: process.env.VAULT_PASSWORD,
//   roleId: process.env.VAULT_ROLE_ID,
//   secretId: process.env.VAULT_SECRET_ID,
// };

// const SECRET_MAPPINGS = {
//   'secret/sync-playlist/database': ['DATABASE_URL'],
//   'secret/sync-playlist/auth': [
//     'BETTER_AUTH_SECRET',
//     'BETTER_AUTH_URL',
//     'BETTER_AUTH_TELEMETRY_DEBUG',
//   ],
//   'secret/sync-playlist/google': ['GOOGLE_CLIENT_ID', 'GOOGLE_CLIENT_SECRET'],
// };

// class VaultEnvGenerator {
//   constructor() {
//     this.client = vault({
//       apiVersion: 'v1',
//       endpoint: VAULT_CONFIG.endpoint,
//       token: VAULT_CONFIG.token,
//     });
//   }

//   async authenticate() {
//     try {
//       if (
//         VAULT_CONFIG.authMethod === 'userpass' &&
//         VAULT_CONFIG.username &&
//         VAULT_CONFIG.password
//       ) {
//         console.log('Authenticating with userpass method...');
//         const result = await this.client.userpassLogin({
//           username: VAULT_CONFIG.username,
//           password: VAULT_CONFIG.password,
//         });
//         this.client.token = result.auth.client_token;
//       } else if (
//         VAULT_CONFIG.authMethod === 'approle' &&
//         VAULT_CONFIG.roleId &&
//         VAULT_CONFIG.secretId
//       ) {
//         console.log('Authenticating with approle method...');
//         const result = await this.client.approleLogin({
//           role_id: VAULT_CONFIG.roleId,
//           secret_id: VAULT_CONFIG.secretId,
//         });
//         this.client.token = result.auth.client_token;
//       } else if (VAULT_CONFIG.token) {
//         console.log('Using token authentication...');
//       } else {
//         throw new Error('No valid authentication method configured');
//       }

//       await this.client.tokenLookupSelf();
//       console.log('‚úÖ Successfully authenticated with Vault');
//     } catch (error) {
//       throw new Error(`Vault authentication failed: ${error.message}`);
//     }
//   }

//   async fetchSecrets() {
//     const secrets = {};

//     for (const [secretPath, keys] of Object.entries(SECRET_MAPPINGS)) {
//       try {
//         console.log(`Fetching secrets from ${secretPath}...`);
//         const result = await this.client.read(secretPath);
//         const secretData = result.data?.data || result.data || {};

//         for (const key of keys) {
//           if (secretData[key]) {
//             secrets[key] = secretData[key];
//             console.log(`‚úÖ Found ${key}`);
//           } else {
//             console.log(`‚ö†Ô∏è  Missing ${key} in ${secretPath}`);
//           }
//         }
//       } catch (error) {
//         console.error(`‚ùå Failed to read ${secretPath}: ${error.message}`);
//       }
//     }

//     return secrets;
//   }

//   generateEnvFile(secrets) {
//     const envPath = path.join(process.cwd(), '.env');
//     const envExamplePath = path.join(process.cwd(), '.env.example');

//     let envContent = [];

//     envContent.push('# Generated by Vault on ' + new Date().toISOString());
//     envContent.push('');

//     // Auth section
//     envContent.push('# Better Auth Configuration');
//     envContent.push(
//       `BETTER_AUTH_SECRET=${secrets.BETTER_AUTH_SECRET || 'your_secret_key'}`,
//     );
//     envContent.push(
//       `BETTER_AUTH_URL=${secrets.BETTER_AUTH_URL || 'http://localhost:3000'}`,
//     );
//     envContent.push(
//       `BETTER_AUTH_TELEMETRY_DEBUG=${secrets.BETTER_AUTH_TELEMETRY_DEBUG || '1'}`,
//     );
//     envContent.push('');

//     // Database section
//     envContent.push('# Database Configuration');
//     envContent.push(
//       `DATABASE_URL="${secrets.DATABASE_URL || 'postgresql://user:password@localhost:5432/mydb?schema=public'}"`,
//     );
//     envContent.push('');

//     // Google OAuth section
//     envContent.push('# Google OAuth Configuration');
//     envContent.push(
//       `GOOGLE_CLIENT_ID=${secrets.GOOGLE_CLIENT_ID || 'your_google_client_id'}`,
//     );
//     envContent.push(
//       `GOOGLE_CLIENT_SECRET=${secrets.GOOGLE_CLIENT_SECRET || 'your_google_client_secret'}`,
//     );
//     envContent.push('');

//     // Vault configuration section
//     envContent.push('# Vault Configuration (for this script)');
//     envContent.push(`# VAULT_ENDPOINT=${VAULT_CONFIG.endpoint}`);
//     envContent.push(`# VAULT_TOKEN=your_vault_token`);
//     envContent.push(`# VAULT_AUTH_METHOD=${VAULT_CONFIG.authMethod}`);

//     const finalContent = envContent.join('\n');

//     // Backup existing .env if it exists
//     if (fs.existsSync(envPath)) {
//       const backupPath = `${envPath}.backup.${Date.now()}`;
//       fs.copyFileSync(envPath, backupPath);
//       console.log(`üìã Backed up existing .env to ${path.basename(backupPath)}`);
//     }

//     fs.writeFileSync(envPath, finalContent);
//     console.log(
//       `‚úÖ Generated new .env file with ${Object.keys(secrets).length} secrets from Vault`,
//     );
//   }

//   async run() {
//     try {
//       console.log('üîê Starting Vault environment generation...');

//       await this.authenticate();
//       const secrets = await this.fetchSecrets();
//       this.generateEnvFile(secrets);

//       console.log('üéâ Environment file generated successfully!');
//     } catch (error) {
//       console.error(`‚ùå Error: ${error.message}`);
//       process.exit(1);
//     }
//   }
// }

// // CLI interface
// if (require.main === module) {
//   const generator = new VaultEnvGenerator();
//   generator.run();
// }

// module.exports = VaultEnvGenerator;
